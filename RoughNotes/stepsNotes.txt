1. npm create vite@latest
2. Enter project name and package name 
3. Choose the frameworks React.
4. Again in next option choose the JavaScript

5. Now certain command are given which we should enter in the cmd in the required folder.
5.1 npm "project_name" //to get project_name enter TAB automatically enters

5.2 Enter another command npm install

5.3 Open in VSCode and in default run by using command:-  npm run dev

5.4 Then, we can go to package.json and replace the name "dev" to "start"  helps to run with command "npm start" but not mandatory.







NOTES:
=>   <>...</> is named as react Fragment which can be any tag <div>,etc and used when we want to write a multiple line of code inside src folder

=>    <h5>Age:{11 + 10}</h5>
{ } are used to get its evaluations and if not used same data(11+10) will be shown in browser.




In NodeJS
require('express')= CJS(Common JS)
import ('express')= ES (Ecma Script)

module.exports=functionName
exports.functionName



# Arrow Functions in JavaScript:
const sayHi = () => {
    console.log("Hello Brother");
}

# Normal Functions in JS
function sayHi(){
    console.log("Hello Brother");
}

Note1: when the html datas are passed inside the function then its called "Component" rather than a function.

Example:
function greet(){
    return{
        <h1>JoJoloppa</h1>
    }
}


Note2:
Problem 1:How to handle routes/path
Solution 1: npm install react-router-dom package



<Route /> is a self closing tag. 

*******************NOTE******************
Download this extension => "ES7 React/Redux/GraphQL/React-Native snippets"

Inside Home.jsx
// Shortcut to get this below by default is "rafce"


NOTE:
Component name should always start from Capital letter as it is conventional use


Problem During managements of Components:

As when the value is changed all the buttons values will change so to solve that Problem
-> We use Props
Example:
<Button title="Login" />

means:
//variable Declarations:
const props={
    title:"Login",
    subTitle:"Register"
}
props.title  -> to access the value Login
props.subTitle  -> to access the value Register


NOTE ON HOOKS:
const [chauchau,setChauchau]=useState("WaiWai")
const [name,setName] =useState("Nischal")


NOTE:
we only write  html files inside of return{} method.
->   return{

}
and write the JS file above that return{} method


->  TO import and use the useState() we have to use these
  const [chauchau, setChauchau] = useState(0)
this will import the useState when useState is entered.


Important NOTE:
->->->  {count +1} is valid in JS but {count++} is not valid as it throws errors.


IN Test.jsx:
 //USING NORMAL FUNCTIONS:
    // function increaseCount() {
    //     setCount(count + 1)
    //     console.log(count);
    // }
    // function decreaseCount() {
    //     setCount(count - 1)
    //     console.log(count);
    // }


//useEffect Hooks->
Types:
Type1:   
useEffect(()=>{
//we use this less compared to other.
})

//Type2:
useEffect(()=>{
//code here
},[])    => first time load/ mount huda page.

//Type3:
useEffect(()=>{

},[variableHere])



NOTE:
// the comment of // </React.StrictMode>, in main.jsx will help to run or show the data in console only one at a time by default or start.


TYPES (INSIDE useEffect.jsx)
// Type1 use of useEffect
    // // kohi manche first time site ma auda or first time refresh/mount/render huda tala ko use hunx 
    // useEffect(() => {
    //     console.log("Welcome to site");
    // }, [])


    // Type2 use of useEffect(jaba certain value eg: like numbers etc haru increase garera backend ma store garne. )
    useEffect(() => {
        // count ko value kati xa tyo backend samma pugauxa yesle:
        if (count !== 0) {
            // document.title = count
            console.log("Count value Changed.");
        }
    }, [count, decreaseCount])



    // Notes: yesle automatically defautt ma +2 garera dinxa 
    // useEffect(() => {
    //     setIncreaseCount(increaseCount + 2)
    // }, [])



Hackers in Webiste 
https://www.hacker.com:80

where:
https => Protocols
www=> Domain
hacker=> hostname
.com:80=>Port numbers

//Integration between frontend and backend

=> npm install axios
=> write below stuffs between the Home and return():
=>  // api call here
    const fetchBlogs = async () => {
        const response = await axios.get('http://localhost:2000/blogs')
        console.log(response);
    }
    useEffect(() => {
        fetchBlogs()
    }, [])
=> Import axios and useEffect properly as it may not be auto-imported.



//use of useNavigate() instead of onClick()

{/* use of window.location will load the whole file so we use navigate() instead */}
{/* <a onClick={() => window.location.href = "./createblog"}>CreateBlog</a> */}
<a onClick={() => navigate('./createblog')}>CreateBlog</a>